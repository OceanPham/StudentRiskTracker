const ConsoleRiskAnalyzer = require('./console_risk_analyzer');

// Demo script to test console application
async function demoApplication() {
    console.log('üéØ DEMO H·ªÜ TH·ªêNG ƒê√ÅNH GI√Å R·ª¶I RO B·ªé H·ªåC CONSOLE\n');

    const analyzer = new ConsoleRiskAnalyzer();

    // Load students
    console.log('1Ô∏è‚É£ T·∫£i d·ªØ li·ªáu sinh vi√™n...');
    if (!analyzer.loadStudents()) {
        console.log('‚ùå Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu sinh vi√™n.');
        return;
    }

    console.log('\n2Ô∏è‚É£ Hi·ªÉn th·ªã danh s√°ch sinh vi√™n:');
    analyzer.showStudentList();

    console.log('\n3Ô∏è‚É£ Xem chi ti·∫øt sinh vi√™n STDB:');
    analyzer.showStudentDetail('STDB');

    console.log('\n4Ô∏è‚É£ ƒê√°nh gi√° r·ªßi ro cho t·∫•t c·∫£ sinh vi√™n:');
    analyzer.assessAllStudents();

    console.log('\n5Ô∏è‚É£ Hi·ªÉn th·ªã c·∫•u h√¨nh h·ªá th·ªëng:');
    analyzer.showConfiguration();

    console.log('\n6Ô∏è‚É£ L∆∞u k·∫øt qu·∫£ v√†o file:');
    analyzer.saveResultsToFile('demo_students_with_risk.json');

    console.log('\n7Ô∏è‚É£ Hi·ªÉn th·ªã l·∫°i danh s√°ch sau khi ƒë√°nh gi√°:');
    analyzer.showStudentList();

    // Close readline
    analyzer.rl.close();

    console.log('\n‚úÖ DEMO HO√ÄN TH√ÄNH!');
    console.log('üéØ ƒê·ªÉ s·ª≠ d·ª•ng ch∆∞∆°ng tr√¨nh t∆∞∆°ng t√°c, ch·∫°y: npm run console');
}

// Run demo
demoApplication().catch(error => {
    console.error('‚ùå L·ªói demo:', error);
    process.exit(1);
});